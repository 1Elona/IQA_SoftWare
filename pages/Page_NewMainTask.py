# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'newMaintask.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QPushButton, QMessageBox

import pages.Page_Home
from util import Database
import time


class Ui_NewMaintask(object):
    # 点击完成后进行了插入数据或更新数据后发出的信号(先进行数据库层面的操作再进行modelview的操作 即把数据显示到软件界面)
    switch_window_to_home = QtCore.pyqtSignal()
    count = 0  # 只要点击了按钮 就能记录住文件夹的图的数量
    # 存放点击按钮后放的原图名
    ori_img = []
    # 存放修改后的字典
    data_edit = {"id": "", "taskname": "", "input": "", "output": "", "create_time": "", "mode": "", "describe": "",
                 "refer_folder": "", "progress": ""}

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1022, 698)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(24)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_xing_2 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(24)
        self.label_xing_2.setFont(font)
        self.label_xing_2.setStyleSheet("#label_xing_2{\n"
                                        "color:rgb(255, 109, 92);\n"
                                        "}")
        self.label_xing_2.setObjectName("label_xing_2")
        self.horizontalLayout_2.addWidget(self.label_xing_2)
        self.label_2 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(18)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_2.addWidget(self.label_2)
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout_2.addWidget(self.lineEdit)
        spacerItem = QtWidgets.QSpacerItem(98, 31, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem)
        self.label_xing = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(24)
        self.label_xing.setFont(font)
        self.label_xing.setStyleSheet("#label_xing{\n"
                                      "color:rgb(255, 109, 92);\n"
                                      "}")
        self.label_xing.setObjectName("label_xing")
        self.horizontalLayout_2.addWidget(self.label_xing)
        self.label_3 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(18)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_2.addWidget(self.label_3)
        self.comboBox = QtWidgets.QComboBox(self.frame)
        self.comboBox.setEnabled(True)
        self.comboBox.setObjectName("comboBox")
        self.horizontalLayout_2.addWidget(self.comboBox)
        spacerItem1 = QtWidgets.QSpacerItem(138, 28, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.horizontalLayout_2.setStretch(1, 1)
        self.horizontalLayout_2.setStretch(5, 1)
        self.horizontalLayout_2.setStretch(6, 4)
        self.horizontalLayout_2.setStretch(7, 3)
        self.verticalLayout.addLayout(self.horizontalLayout_2)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_xing_3 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(24)
        self.label_xing_3.setFont(font)
        self.label_xing_3.setStyleSheet("#label_xing_3{\n"
                                        "color:rgb(255, 109, 92);\n"
                                        "}")
        self.label_xing_3.setObjectName("label_xing_3")
        self.horizontalLayout_3.addWidget(self.label_xing_3)
        self.label_5 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(18)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_3.addWidget(self.label_5)
        self.pushButton = QtWidgets.QPushButton(self.frame)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_3.addWidget(self.pushButton)
        spacerItem2 = QtWidgets.QSpacerItem(98, 31, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem2)
        self.label_xing_4 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(24)
        self.label_xing_4.setFont(font)
        self.label_xing_4.setStyleSheet("#label_xing_4{\n"
                                        "color:rgb(255, 109, 92);\n"
                                        "}")
        self.label_xing_4.setObjectName("label_xing_4")
        self.horizontalLayout_3.addWidget(self.label_xing_4)
        self.label_6 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(18)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_3.addWidget(self.label_6)
        self.pushButton_2 = QtWidgets.QPushButton(self.frame)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_3.addWidget(self.pushButton_2)
        spacerItem3 = QtWidgets.QSpacerItem(138, 28, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem3)
        self.horizontalLayout_3.setStretch(1, 1)
        self.horizontalLayout_3.setStretch(5, 1)
        self.horizontalLayout_3.setStretch(7, 3)
        self.verticalLayout.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_7 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(18)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_4.addWidget(self.label_7)
        self.pushButton_3 = QtWidgets.QPushButton(self.frame)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_4.addWidget(self.pushButton_3)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem4)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.textEdit = QtWidgets.QTextEdit(self.frame)
        self.textEdit.setObjectName("textEdit")
        self.gridLayout.addWidget(self.textEdit, 1, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Academy Engraved LET")
        font.setPointSize(18)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.gridLayout.addWidget(self.label_8, 0, 0, 1, 1)
        self.verticalLayout.addLayout(self.gridLayout)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem5)
        self.pushButton_4 = QtWidgets.QPushButton(self.frame)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_5.addWidget(self.pushButton_4)
        self.verticalLayout.addLayout(self.horizontalLayout_5)
        self.verticalLayout_2.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1022, 42))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # 测试跳转回主页pushButton_4是完成的按钮
        self.pushButton_4.clicked.connect(self.NewMainTaskToHome)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "新建主任务"))
        self.label_xing_2.setText(_translate("MainWindow", "*"))
        self.label_2.setText(_translate("MainWindow", "任务名："))
        self.label_xing.setText(_translate("MainWindow", "*"))
        self.label_3.setText(_translate("MainWindow", "选择模式："))
        self.comboBox.addItem("手动参数设置模式")
        self.comboBox.addItem("智能参数设置模式")
        self.label_xing_3.setText(_translate("MainWindow", "*"))
        self.label_5.setText(_translate("MainWindow", "输入文件夹："))
        self.pushButton.setText(_translate("MainWindow", "选择文件"))
        self.label_xing_4.setText(_translate("MainWindow", "*"))
        self.label_6.setText(_translate("MainWindow", "输出文件夹："))
        self.pushButton_2.setText(_translate("MainWindow", "选择文件"))
        self.label_7.setText(_translate("MainWindow", "参考文件夹：   "))
        self.pushButton_3.setText(_translate("MainWindow", "选择文件"))

        self.pushButton.clicked.connect(self.open_folder)
        self.pushButton_2.clicked.connect(self.open_folder)
        self.pushButton_3.clicked.connect(self.open_folder)

        self.textEdit.setHtml(_translate("MainWindow",
                                         "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                                         "<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
                                         "p, li { white-space: pre-wrap; }\n"
                                         "hr { height: 1px; border-width: 0; }\n"
                                         "</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
                                         "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "任务说明："))
        self.pushButton_4.setText(_translate("MainWindow", "完成"))

    # 点击完成后（无论从编辑页面返回还是从新建主任务点击的完成）都调用这函数
    def NewMainTaskToHome(self):
        progress = "0" + "/" + str(Ui_NewMaintask.count)
        t = time.localtime()
        create_time = str(t.tm_mon) + '/' + str(t.tm_mday) + '/' + str(
            str(t.tm_hour) + ':' + str(t.tm_min) + ':' + str(t.tm_sec))

        if self.lineEdit.text() == '':
            QMessageBox.warning(self, '警告', '任务名不能为空')
            return
        if self.pushButton.text() == '选择文件':
            QMessageBox.warning(self, '警告', '输入文件夹不能为空')
            return
        if self.pushButton_2.text() == '选择文件':
            QMessageBox.warning(self, '警告', '输出文件夹不能为空')
            return

        # 如果从修改按钮进（根据id修改）
        if self.row:
            Database.editMaintask(self.row,self.lineEdit.text(), self.pushButton.text(),
                                  self.pushButton_2.text(), pages.Page_Home.Ui_Home.username, progress = progress, create_time = create_time,
            refer_folder = self.pushButton_3.text(),
            mode = self.comboBox.currentText(), describe = self.textEdit.toPlainText())

        else:
            # 从新建主任务进来 插入数据到数据库
            Database.insert_Maintaskdata(self.lineEdit.text(), self.pushButton.text(), self.pushButton_2.text(),
                                         pages.Page_Home.Ui_Home.username, mode=self.comboBox.currentText()
                                         , describe=self.textEdit.toPlainText(), progress=progress,
                                         create_time=create_time, refer_folder=self.pushButton_3.text()
                                         )
        # 添加主任务成功，返回主界面
        self.switch_window_to_home.emit()

    def open_folder(self):
        button = self.sender()

        bt_name = button.objectName()
        print(bt_name)
        bt = self.findChild(QPushButton, bt_name)

        # print(button.objectName())
        options = QFileDialog.Options()
        options |= QFileDialog.ReadOnly
        folder_path = QFileDialog.getExistingDirectory(self, "Select Folder", options=options)
        if folder_path:
            # 按钮透明
            bt.setFlat(True)
            bt.setStyleSheet("background:transparent;")
            bt.setText(folder_path)

            for file_name in os.listdir(folder_path):
                file_path = os.path.join(folder_path, file_name)
                if os.path.isfile(file_path):
                    if bt_name == "pushButton":
                        # Ui_NewMaintask.ori_img.append(file_name)
                        pass
                    Ui_NewMaintask.count = Ui_NewMaintask.count + 1
